
# Source: flightctl/templates/flightctl-secrets-job.yaml
apiVersion: batch/v1
kind: Job
metadata:
  name: flightctl-secrets
  namespace: {{  .Values.global.namespace }}
spec:
  selector: {}
  template:
    metadata:
      name: flightctl-secrets
    spec:
      serviceAccountName: flightctl-secrets
      containers:
        - name: flightctl-secrets
          image: quay.io/openshift/origin-cli
          command:
            - /bin/sh
            - -c
            - |
              set -e
              DB_PASSWORD=$(cat /dev/urandom | tr -dc 'A-Za-z0-90-9' | fold -w5 | head -n4 | paste -sd'-')
              DB_MASTER_PASSWORD=$(cat /dev/urandom | tr -dc 'A-Za-z0-90-9' | fold -w5 | head -n4 | paste -sd'-')
              DB_USER_PASSWORD=$(cat /dev/urandom | tr -dc 'A-Za-z0-90-9' | fold -w5 | head -n4 | paste -sd'-')
              KV_PASSWORD=$(cat /dev/urandom | tr -dc 'A-Za-z0-90-9' | fold -w5 | head -n4 | paste -sd'-')
              if ! oc get secret flightctl-db-secret -n {{  .Values.global.namespace }} >/dev/null 2>&1; then
                oc create secret generic flightctl-db-secret -n={{  .Values.global.namespace }} --from-literal=password="$DB_PASSWORD" --from-literal=masterPassword="$DB_MASTER_PASSWORD" --from-literal=masterUser="admin" --from-literal=userPassword="$DB_USER_PASSWORD" --from-literal=user="demouser"
              fi
              if ! oc get secret flightctl-kv-secret -n {{  .Values.global.namespace }} >/dev/null 2>&1; then
                oc create secret generic flightctl-kv-secret -n={{  .Values.global.namespace }} --from-literal=password="$KV_PASSWORD"
              fi
      restartPolicy: Never
